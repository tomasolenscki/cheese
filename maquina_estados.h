#ifndef MAQUINA_ESTADOS_H_INCLUDED
#define MAQUINA_ESTADOS_H_INCLUDED

#define NUM_ESTADOS 9
#define NUM_EVENTOS 21

// ESTADOS
#define IDLE            0
#define MODOS_DE_JOGO   1
#define PRONTO          2
#define TURNO           3
#define JOGADA          4
#define VERIFICACAO     5
#define ILEGAL          6
#define EMPATE          7
#define FIM             8

// EVENTOS
#define NENHUM_EVENTO   -1
#define LEFT            0
#define RIGHT_ESCOLHE_MODO  1
#define UP              2
#define DOWN            3
#define POSICIONAMENTO_DAS_PECAS    4
#define BOTAO_TIMER         5
#define LEVANTA_PECA        6
#define DEVOLVE_PECA        7
#define ESCOLHE_CASA        8
#define ESCOLHA_ILEGAL      9
#define LEVANTA_PECA_ILEGAL 10
#define VITORIA_DERROTA     11
#define LEGAL_nULTIMO       12
#define LEGAL_ULTIMO        13
#define ACABA_TEMPO         14
#define LEFT_T              15
#define LEFT_J              16
#define LEFT_I              17
#define LEFT_V              18
#define RIGHT_JOGAR_NOVAMENTE   19
#define RIGHT_MENU_PRINCIPAL    20

// MODO DE JOGO
#define CHEESE 1
#define QUEENS 2

// ACOES
#define NENHUMA_ACAO -1
#define A01  0
#define A02  1
#define A03  2
#define A04  3
#define A05  4
#define A06  5
#define A07  6
#define A08  7
#define A09  8
#define A10  9
#define A11  10
#define A12  11
#define A13  12
#define A14  13
#define A15  14
#define A16  15
#define A17  16
#define A18  17
#define A19  18
#define A20  19

int obterEvento();
int obterAcao(int estado, int codigoEvento);
int obterProximoEstado(int estado, int codigoEvento);
int executarAcao(int codigoAcao);

int proximo_estado_matrizTransicaoEstados[NUM_ESTADOS][NUM_EVENTOS] = {
    {IDLE, MODOS_DE_JOGO, IDLE, IDLE, IDLE, IDLE, IDLE, IDLE, IDLE, IDLE, IDLE, IDLE, IDLE, IDLE, IDLE, IDLE, IDLE, IDLE, IDLE, IDLE, IDLE}, 
    {IDLE, MODOS_DE_JOGO, MODOS_DE_JOGO, MODOS_DE_JOGO, PRONTO, MODOS_DE_JOGO, MODOS_DE_JOGO, MODOS_DE_JOGO, MODOS_DE_JOGO, MODOS_DE_JOGO, MODOS_DE_JOGO, MODOS_DE_JOGO, MODOS_DE_JOGO, MODOS_DE_JOGO, MODOS_DE_JOGO, MODOS_DE_JOGO, MODOS_DE_JOGO, MODOS_DE_JOGO, MODOS_DE_JOGO, MODOS_DE_JOGO, MODOS_DE_JOGO},
    {PRONTO, PRONTO, PRONTO, PRONTO, PRONTO, TURNO, PRONTO, PRONTO, PRONTO, PRONTO, PRONTO, PRONTO, PRONTO, PRONTO, PRONTO, PRONTO, PRONTO, PRONTO, PRONTO, PRONTO, PRONTO},
    {EMPATE, TURNO, TURNO, TURNO, TURNO, TURNO, JOGADA, TURNO, TURNO, TURNO, TURNO, TURNO, TURNO, TURNO, FIM, TURNO, TURNO, TURNO, TURNO, TURNO, TURNO}, 
    {EMPATE, JOGADA, JOGADA, JOGADA, JOGADA, JOGADA, JOGADA, JOGADA, VERIFICACAO, JOGADA, JOGADA, JOGADA, JOGADA, JOGADA, FIM, JOGADA, JOGADA, JOGADA, JOGADA, JOGADA, JOGADA},
    {EMPATE, VERIFICACAO, VERIFICACAO, VERIFICACAO, VERIFICACAO, VERIFICACAO, VERIFICACAO, TURNO,  VERIFICACAO, ILEGAL, VERIFICACAO, FIM, TURNO, TURNO, FIM, VERIFICACAO, VERIFICACAO, VERIFICACAO, VERIFICACAO, VERIFICACAO, VERIFICACAO}, 
    {EMPATE, ILEGAL, ILEGAL, ILEGAL, ILEGAL, ILEGAL, ILEGAL, ILEGAL, ILEGAL, ILEGAL, JOGADA, ILEGAL, ILEGAL, ILEGAL, FIM, ILEGAL, ILEGAL, ILEGAL, ILEGAL, ILEGAL, ILEGAL}, 
    {EMPATE, IDLE, EMPATE, EMPATE, EMPATE, EMPATE, EMPATE, EMPATE, EMPATE, EMPATE, EMPATE, EMPATE, EMPATE, EMPATE, EMPATE, TURNO, JOGADA, ILEGAL, VERIFICACAO, EMPATE, EMPATE},
    {FIM, FIM, FIM, FIM, FIM, FIM, FIM, FIM, FIM, FIM, FIM, FIM, FIM, FIM, FIM, FIM, FIM, FIM, FIM, MODOS_DE_JOGO, IDLE}
};


int acao_matrizTransicaoEstados[NUM_ESTADOS][NUM_EVENTOS] = {
    {NENHUMA_ACAO, A03, A01, A02, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO}, 
    {A04, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO, A05, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO}, 
    {NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO, A06, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO}, 
    {A16, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO, A07, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO, A15, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO}, 
    {A16, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO, A09, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO, A15, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO}, 
    {A16, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO, A08, NENHUMA_ACAO, A10, NENHUMA_ACAO, A12, A13, A14, A15, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO}, 
    {A16, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO, A11, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO, A15, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO}, 
    {NENHUMA_ACAO, A17, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO, A18, A18, A18, A18, NENHUMA_ACAO, NENHUMA_ACAO}, 
    {NENHUMA_ACAO, NENHUMA_ACAO, A01, A02, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO, NENHUMA_ACAO, A19, A20}, 
};

int game = CHEESE;

#endif // MAQUINA_ESTADOS_H_INCLUDED
